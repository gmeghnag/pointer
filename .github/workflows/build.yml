name: Build

on:
  push:
    tags:
      - "v*.*.*"

  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Install Golang
        run: |
          wget -nv https://golang.org/dl/go1.17.2.linux-amd64.tar.gz \
          && sudo rm -rf /usr/local/go \
          && sudo rm -rf m -rf /usr/bin/go \
          && sudo tar -C /usr/local -xzf go1.17.2.linux-amd64.tar.gz 

      - name: Build Binary
        run: |
          echo "RELEASE_TAG=${GITHUB_REF#refs/tags/}" >> $GITHUB_ENV 
          TAG="${GITHUB_REF#refs/tags/}"
          HASH=$(git log -n1 --pretty=format:%h)
          export PATH=$PATH:/usr/local/go/bin \
          && CGO_ENABLED=0 GOOS=linux GOARCH=amd64 go build -ldflags "-X 'github.com/gmeghnag/pointer/pkg/vars.OMCVersionTag=${TAG}' -X github.com/gmeghnag/pointer/pkg/vars.OMCVersionHash=${HASH}" -o pointer \
          && tar -cvf pointer-${TAG}_Linux_x86_64.tar.gz pointer \
          && md5sum pointer-${TAG}_Linux_x86_64.tar.gz | tee -a checksums.txt 

      - name: Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ env.RELEASE_TAG }}
          files: |
            checksums.txt
            pointer-${{ env.RELEASE_TAG }}_Linux_x86_64.tar.gz 
          name: "${{ env.RELEASE_TAG }} release"

      - name: Log in to the Container registry
        uses: docker/login-action@f054a8b539a109f9f41c372932f1ae047eff08c9
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@98669ae865ea3cffbcbaa878cf57c20bbf1c6c38
        with:
          images: ghcr.io/${{ github.repository }}

      - name: Build and push Docker image
        uses: docker/build-push-action@ad44023a93711e3deb337508980b4b5e9bcdc5dc
        with:
          context: .
          push: true
          tags: ghcr.io/${{ github.repository }}:${{ env.RELEASE_TAG }}
          labels: ${{ steps.meta.outputs.labels }}